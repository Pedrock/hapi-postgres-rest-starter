version: '3'
services:
  api:
    build: .
    depends_on:
      - postgres
      - redis
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=docker
      - DB_NAME=docker
      - REDIS_HOST=redis
      - REDIS_PASSWORD=redis
      - VIRTUAL_HOST=EXAMPLE.COM
      - LETSENCRYPT_HOST=EXAMPLE.COM
      - LETSENCRYPT_EMAIL=EMAIL@EXAMPLE.COM
    command: npm start

  postgres:
    image: postgres:10-alpine
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=docker

  redis:
    image: redis:4-alpine
    volumes:
      - redis:/data

  nginx-proxy:
    image: jwilder/nginx-proxy:alpine
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/conf.d:/etc/nginx/conf.d"
      - "./nginx/vhost.d:/etc/nginx/vhost.d"
      - "./nginx/html:/usr/share/nginx/html"
      - "./nginx/certs:/etc/nginx/certs"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "./nginx/conf.d:/etc/nginx/conf.d"
      - "./nginx/vhost.d:/etc/nginx/vhost.d"
      - "./nginx/html:/usr/share/nginx/html"
      - "./nginx/certs:/etc/nginx/certs"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  postgres:
  redis:
